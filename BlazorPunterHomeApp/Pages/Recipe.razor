@page "/recipes"
@inject Blazored.Modal.Services.IModalService Modal

@using BlazorPunterHomeApp.Data;
@using BlazorPunterHomeApp.ViewModels;
@inject RecipeService RecipeService
@inject ProductService PropductService
@inject NavigationManager NavigationManager
<h3>Recipe</h3>
<div class="row">
    <div class="col-12 col-md-6 input-group">
        <input type="text" class="form-control" placeholder="New recipe name" id="name" @bind="newRecipeName" aria-describedby="button-addon2" />

        <button class="btn btn-primary" type="button" @onclick="HandleSubmit">Save</button>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        @foreach (var cnt in recipes)
        {

            <div class="col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2">
                <a href="@($"recipe/{cnt.Id}")" class="custom-card">
                    <div class="card" style="margin-top:5px;">
                        <div class="card-body">
                            <h5 class="card-title">@cnt.Name</h5>
                        </div>
                    </div>
                </a>

            </div>

        }
    </div>
</div>

    @code {
        private string RecipeAvailableColorString = "69B878";
        private string RecipeUnAvailableColorString = "DB5853";
        private RecipeViewModel RecipeViewModel;
        private string newRecipeName = string.Empty;

        private RecipeModel[] recipes = new RecipeModel[0];

        protected override async Task OnInitializedAsync()
        {
            RecipeViewModel = new RecipeViewModel(PropductService);

            recipes = await RecipeViewModel.GetRecipes();

            RecipeViewModel.PropertyChanged += async (a, b) => await InvokeAsync(() => StateHasChanged());
        }

        private async void HandleSubmit()
        {
            await RecipeViewModel.CreateNewRecipe(newRecipeName);
            recipes = await RecipeViewModel.GetRecipes();
            StateHasChanged();

            NavigationManager.NavigateTo($"recipe/{recipes.First(r => r.Name == newRecipeName).Id}");

            newRecipeName = string.Empty;
        }
    }
