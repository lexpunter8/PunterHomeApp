@page "/recipe/{Id:guid}"
@inject Blazored.Modal.Services.IModalService Modal
@inherits RecipedetailsViewBase
@if (Recipedetails != null)
{
    <div class="container justify-content-center">
        <div class="row mt-2 justify-content-center">

            <h2 style="display: inline-block">@Recipedetails.Name</h2>
            <i class="ml-2 far fa-edit pointer @(IsEditting ? "recipe-available-color" : "")" @onclick="ToggleIsEdtting"></i>
        </div>

        <div class="row justify-content-center">
            <div class="justify-content-lg-around">
                <i class="far fa-clock"></i>
                <span>15 minutes</span>
                <span>+ 30 minutes</span>
            </div>
        </div>
        <div class="row pt-3 mb-3">
            <div class="pt-3 col-12 col-xl-7 justify-content-center order-last order-md-first">
                <div class="col-12 p-3 bg-el-1">
                    <h4>Instructions</h4>
                    <hr class="bg-el-0" />

                    <div class="col-12">
                        <EditForm OnValidSubmit="AddStep" Model="newStepText">
                            <div class="input-group mb-2 @(IsEditting ? "show" : "collapse")">
                                <textarea rows="4" @ref="AddInstructionTextContol" type="text" class="form-control" id="Instruction text" @bind="newStepText.Text" />
                                <div class="input-group-append">
                                    <button type="submit" class="btn btn-outline-primary">Add instruction step</button>
                                </div>
                            </div>
                        </EditForm>
                    </div>
                    <div class="row">
                        <ul ondragover="event.preventDefault();" class="list-unstyled col-12">

                            @foreach (var step in RecipeSteps)
                            {
                                <li draggable="@(IsEditting && !step.IsEditting)" @key="step.Step.Id" @ondrop="@(() => Drop(step))" @ondrag="@(() => StartDrag(step))">
                                    <div class="row">
                                        <div class="col-auto my-1">
                                            <span class="circle @(step.IsOrderEditting ? "bg-c-primary": "bg-el-4")" @onclick="@(() => ToggleOrderEditting(step))">@step.Step.Order</span>
                                        </div>

                                        <div class="col mr-2" style="min-height: 50px">
                                            @if (step.IsEditting && IsEditting)
                                            {
                                                <EditForm Model="step.Step" OnValidSubmit="(() => UpdateStep(step))" @onfocusout="(() => UpdateStep(step))">
                                                    <div class="input-group mb-2 @(IsEditting ? "show" : "collapse")">
                                                        <texztarea @ref="FocusElement" class="form-control" rows="4" @bind="@step.Step.Text" autofocus></texztarea>
                                                        <div class="input-group-append" style="padding:0">
                                                            <span class="btn-group-vertical">

                                                                <button type="submit" class="btn btn-outline-primary" style="border-top-left-radius: 0; border-bottom-left-radius:0; border-bottom-right-radius:0;">
                                                                    <i class="fas fa-save"></i>
                                                                </button>
                                                                <button @onclick="(() => UpdateStep(step, true))" class="btn btn-outline-primary" style="border-top-left-radius: 0; border-bottom-left-radius:0; margin:0; border-top-right-radius:0;">
                                                                    <i class="far fa-window-close"></i>
                                                                </button>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </EditForm>
                                            }
                                            else
                                            {
                                                <span class="mr-2" @onclick="(() => ToggleTextEditting(step))">@step.Step.Text</span>
                                            }
                                        </div>

                                        <div class="col-auto">


                                            <h5>Required ingredients</h5>
                                            <hr class="bg-el-0" />

                                            <ul class="list-unstyled">
                                                @foreach (var item in step.Step.Ingredients)
                                                {
                                                    <li>@item.ProductName</li>
                                                }
                                            </ul>


                                            <div class="d-flex flex-row-reverse">

                                                <div class="dropdown">

                                                    <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-expanded="false">
                                                        Add
                                                    </button>

                                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                        @foreach (var i in Recipedetails.Ingredients.Where(i => !step.Step.Ingredients.Any(y => y.ProductId == i.ProductId)))
                                                        {
                                                            <a @onclick="() => AddIngredientToStep(step.Step.Id, i.ProductId)" class="dropdown-item">@i.ProductName</a>
                                                        }
                                                    </div>

                                                </div>
                                            </div>




                                        </div>
                                    </div>

                                    <hr class="mx-2 bg-secondary" />
                                    @*<div class="" style="margin:5px 0 0 0">
                                        <div class="justify-content-center align-middle col-md-2" @ondr>

                                        <span class="circle bg-el-4">@step.Step.Order</span>
                                        </div>
                                        <div class="col-md-10">
                                        <div style="min-height: 50px">
                                        @{
                                        @if (step.IsEditting && IsEditting)
                                        {
                                        <EditForm Model="step.Step" OnValidSubmit="(() => UpdateStep(step))" @onfocusout="(() => UpdateStep(step))">
                                        <InputText @bind-Value="step.Step.Text" autofocus></InputText>
                                        </EditForm>
                                        }
                                        else
                                        {
                                        <span @onclick="(() => step.IsEditting = true)">@step.Step.Text</span>
                                        }
                                        }

                                        </div>
                                        </div>
                                        </div>*@
                                </li>

                            }
                        </ul>



                    </div>
                </div>
            </div>

            <div class="col-12 pt-3 col-xl-5 justify-content-start order-first order-md-last">

                <div class="p-3 bg-el-1">

                    <h4>Ingredients</h4>
                    <hr class="bg-el-0" />
                    <div class="p-2 row">
                        <div class="col-12 col-sm-5 mt-2 d-flex justify-content-start">
                            Hoeveelheid
                        </div>
                        <div class="col-12 col-sm-7 d-flex justify-content-start justify-content-sm-end">
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-outline-primary active" @onclick="@(() => ChangePersons(1))">
                                    <input type="radio" name="options" id="option1" checked>1
                                </label>
                                <label class="btn btn-outline-primary" @onclick="@(() => ChangePersons(2))">
                                    <input type="radio" name="options" id="option2">2
                                </label>
                                <label class="btn btn-outline-primary" @onclick="@(() => ChangePersons(3))">
                                    <input type="radio" name="options" id="option3">3
                                </label>
                                <label class="btn btn-outline-primary" @onclick="@(() => ChangePersons(4))">
                                    <input type="radio" name="options" id="option3">4
                                </label>
                                <label class="btn btn-outline-primary" @onclick="@(() => ChangePersons(5))">
                                    <input type="radio" name="options" id="option3">5
                                </label>
                                <label class="btn btn-outline-primary">
                                    <input type="radio" name="options" id="option3">...
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="p-2 p-2 accordion" id="accordionExample">
                        <ul class="list-unstyled">
                            @foreach (var details in Recipedetails.Ingredients)
                            {
                                <li>
                                    <div class="flex-row">
                                        <span>
                                            @if (details.IsAvaliable)
                                            {
                                                <i class="mr-2 fas fa-check-circle recipe-available-color"></i>
                                            }
                                            else
                                            {
                                                <i class="mr-2 fas fa-times-circle recipe-unavailable-color"></i>
                                            }
                                            @(details.UnitQuantity * IngredientMultiplier)
                                            @details.UnitQuantityType
                                            @details.ProductName
                                            <i class="fas fa-times pointer @(IsEditting ? "show" : "collapse")" @onclick="@(() => RemoveIngredient(details.ProductId))"></i>

                                        </span>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                    @if (IsEditting)
                    {
                        <div class="mb-5 p-1">
                            <BlazorPunterHomeApp.Components.SearchSelectProductComponent @ref="SearchProductControl" RecipeId="Recipedetails.Id" OnIngredientAdded="IngredientAddedHandler"></BlazorPunterHomeApp.Components.SearchSelectProductComponent>

                        </div>
                    }

                    <div class="btn-group">
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary" @onclick="() => AddIngredientsToShoppingList()">Add ingredients to shoppingcart</button>
                            <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="sr-only">Toggle Dropdown</span>
                            </button>
                            <div class="dropdown-menu">
                                <a class="dropdown-item" @onclick="() => AddIngredientsToShoppingList(true)" href="#">Only unavailable ingredients</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>

}
