@page "/fetchdata"

@using BlazorPunterHomeApp.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>icon</th>
                <th>icon Regular</th>
                <th>icon light</th>
                <th>icon duotone</th>
                <th>name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in Icons)
            {
                <tr>
                    <td><Icon Name="forecast" IconStyle="IconStyle.Solid" Class="text-success"></Icon></td>
                    <td><Icon Name="forecast" IconStyle="IconStyle.Regular"></Icon></td>
                    <td><Icon Name="forecast" IconStyle="IconStyle.Light"></Icon></td>
                    <td><Icon Name="forecast" IconStyle="IconStyle.DuoTone"></Icon></td>
                    <td>@forecast</td>
                </tr>
                
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    private Blazorise.IconName[] Icons = Enum.GetValues(typeof(Blazorise.IconName)).Cast<Blazorise.IconName>().ToArray();

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
